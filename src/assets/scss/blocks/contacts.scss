.contacts {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr min-content;
  min-height: 100vh;
  column-gap: 14rem;
  @include breakpoint($cos-bp) {
    column-gap: 0;
    grid-template-columns: 1fr;
  }
  @include breakpoint($sm-bp) {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    row-gap: 6.5rem;
  }
  div.contacts__block {
    align-self: center;
    display: flex;
    flex-direction: column;
    gap: 8rem;
    div.contacts__container {
      display: flex;
      flex-direction: column;
      gap: 3rem;
      padding: 1rem 0;
      div.contacts__container-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        a {
          &:hover {
            color: $gray2;
          }
        }
      }
    }
  }

  div.contacts__images-container {
    position: relative;
    display: grid;
    grid-template-rows: repeat(3, 41vh);
    row-gap: 1rem;
    grid-column: 2 / 3;
    grid-row: 1 /3;
    overflow: hidden;
    height: 100vh;
    @include breakpoint($cos-bp) {
      padding-top: 4rem;
      padding-left: 4rem;
      padding-right: 4rem;
      grid-column: auto;
      grid-row: auto;
    }
    @include breakpoint($sm-bp) {
      grid-template-rows: auto;
      grid-column: auto;
      grid-row: auto;
      position: relative;
      height: 70rem;
    }
    div.contacts__img-container {
      @include breakpoint($sm-bp) {
        position: absolute;
        top: 0;
        width: 100%;
        height: 65%;
      }
      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    .contacts__img-container:nth-child(2){
      transform: translateX(10rem);
      @include breakpoint($cos-bp) {
        transform: translateX(0);
      }
      @include breakpoint($sm-bp) {
        top: 39%;
        left: -35%;
        width: 100%;
        height: 60%;
        z-index: 2;
      }
    }
    .contacts__img-container:nth-child(3){
      transform: translateX(4rem);
      @include breakpoint($cos-bp) {
        transform: translateX(0);
      }
      @include breakpoint($sm-bp) {
        top: 59%;
        right: -67%;
        width: 100%;
        height: 40%;
        z-index: 2;
        transform-origin: bottom;
      }
    }
  }

  .contacts__right {
    padding-top: 1rem;
    padding-bottom: 2rem;
  }
}

.form-container {
  display: grid;
  grid-template-columns: 22.9rem 13.9rem;
  row-gap: 3rem;
  column-gap: 2.5rem;
  @include breakpoint($cos-bp) {
    align-items: center;
  }
  @include breakpoint($sm-bp) {
    grid-template-columns: 1fr;
  }
  input.custom-input {
    grid-column: 2 span;
  }

  button {
    display: flex;
    gap: 1rem;
    border: 0;
    @include breakpoint($sm-bp) {
      justify-content: flex-end;
    }
    span {
      padding-top: 0.2rem;
    }
    .arrow {
      transform: rotate(-45deg);
    }
  }
  .contacts__checkbox::before {
    padding-right: 1rem;
    height: 2rem;
    width: 2rem;
  }
  .form-container__doc {
    @include breakpoint($sm-bp) {
      grid-column: 2 span;
    }
  }
}

.bold24 {
/* Raleway/Bold/24 */

font-family: $bold;
font-style: normal;
font-weight: 700;
font-size: 2.4rem;
line-height: 120%;
/* identical to box height, or 29px */

font-feature-settings: 'pnum' on, 'lnum' on;

/* Черный */

color: var(--darktheme);
@include breakpoint($cos-bp) {
  font-size: 2rem;
}
@include breakpoint($sm-bp) {
  font-size: 3rem;
}
}
.reg12 {
  font-family: $light;
  font-style: normal;
  font-weight: 400;
  font-size: 1.2rem;
  line-height: 1.5rem;
  /* identical to box height */
  
  
  /* серый2 */
  
  color: $gray2;
  @include breakpoint($sm-bp) {
    font-size: 2.2rem;
  }
}

.main-form {
  width: 51rem;
  height: min-content;
  padding: 5rem;
  overflow: scroll;
  height: min-content;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: $white;
  color: $black;
  z-index: 99;
  box-shadow: 0 0 10px rgb(0 0 0 / 50%);
  @include breakpoint($sm-bp) {
    width: 92%;
    padding: 5rem 2rem 3rem;
  }
  .reg18 {
    padding-top: 1rem;
    padding-bottom: 5rem;
  }
  input {
    border-bottom: 1px solid $black;
  }
  button {
    color: $black;
    svg {
      stroke: $black;
    }
  }
}
.main-form[hidden] + .main-form__overlay{
  display: none;
}
.main-form__overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: rgb(0, 0, 0, 0.8);
  z-index: 10;
}

.close-icon {
  position: absolute;
  top: 2rem;
  right: 2rem;
  width: 2.1rem;
  height: 2.1rem;
  border: 0;
  &::after,
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 0.1rem;
    background-color: $black;
    transform: translateX(-50%) rotate(45deg);
  }
  &::after {
    transform: translateX(-50%) rotate(-45deg);
  }
}